// OrderInfoSection.js
import React from 'react';

const OrderInfoSection = ({
    orderType,
    formData,
    orderTimeInMinutes,
    getFormattedTime,
    isModifyingTime,
    setIsModifyingTime,
    modifyTimeButtonRef,
    resetOrderTimeToAsap,
    increaseOrderTime,
    decreaseOrderTime,
    increaseExactTime,
    decreaseExactTime,
    handleOrderInfoClick,
    modifyPopupRef
}) => {
    return (
        <div className="order-info" onClick={handleOrderInfoClick}>
            {/* Heading */}
            <div className="heading-text">
                <span>{orderType}</span>
            </div>

            {/* Shows Customer Info */}
            {(formData.name || formData.phone || formData.postcode || formData.address) ? (
                <div className="info-text">
                    {formData.name && <span>{formData.name}</span>}
                    {formData.phone && <span>{formData.phone}</span>}
                    {formData.postcode && <span>{formData.postcode}</span>}
                    {formData.address && <span>{formData.address}</span>}
                </div>
            ) : null}

            {/* Modify Time Button */}
            <button
                className="modify-time-button"
                ref={modifyTimeButtonRef}
                onClick={(e) => {
                    e.stopPropagation();
                    setIsModifyingTime((prev) => !prev);
                }}
                style={{ zIndex: 2 }}
            >
                <span>{orderTimeInMinutes === 25 ? 'ASAP' : getFormattedTime()}</span>
                <span className="arrow"> â–²</span>
            </button>

            {/* Dark Overlay */}
            {isModifyingTime && <div className="order-info-overlay"></div>}

            {/* Modify Time Popup */}
            {isModifyingTime && (
                <div className="modify-time-layer" ref={modifyPopupRef}>
                    <div className="asap-section">
                        <button className={`asap-button ${orderTimeInMinutes === 25 ? 'selected' : ''}`} onClick={resetOrderTimeToAsap}>
                            ASAP
                        </button>
                    </div>
                    <div className="section time-toggle">
                        <button onClick={decreaseOrderTime}>-</button>
                        <span>{orderTimeInMinutes} mins</span>
                        <button onClick={increaseOrderTime}>+</button>
                    </div>
                    <div className="section exact-time">
                        <button onClick={decreaseExactTime}>-</button>
                        <span>{getFormattedTime()}</span>
                        <button onClick={increaseExactTime}>+</button>
                    </div>
                </div>
            )}
        </div>
    );
};

export default OrderInfoSection;
